TODO

 - Implement clean up functions (function pointers in general cipher struct)
 - Write nice (easy to read and extend) tests
 - Add guards for calling functions too many times (data limits) **
 - Make more portable with size_t instead of u_int (or understand what is the difference)
 - Licencse? 
 - Add support for authenticated additional data
 - Implement re-key **
 - Add fake parse and encrypt after recieving final chunk **
 - Re-write im_initialise (because it is damm ugly...)
 - function descriptions should be moved to header files
 - spring clean of intermac repo and openssh-intermac repo
 - change padding such that it does not rely on the printable char '0' but actually the byte 0
 - Make it consistent where the chunk_length parameter is in function definitions

 DONE:
 - Write decryption function description
 - Implement MAKE file
 - Implement AES-GCM support (use NI) or make comparable with OpenSSH?
 - Integrate into OpenSSH
 - (somewhat)) Refactor to constant time online encryption/decryption

 NOTES

 - Per packet timing leak is bad
 - Per chunk timing leak is ok 
 - Had to disable block length check. How to get around this???
 - ChaCha-Poly construction follows https://tools.ietf.org/html/
 - packages are normally small during interactive session so more efficient to remove lenth field and padding length field


 PAPER

 - Document design decisions
 - Discuss why we can't do exponential forecating 
 - Discuss why are we trying to acheive boundary hidinng
 - Pseudo descriptions 
 - Discuss what the strategy should be when the decryption function returns
   * Should we copy data right away or wait for the whole ciphertext to be decrypted?
   * waitiing might give a timing signal becuase it suddently takes time to copy (maybe a lot of data)

